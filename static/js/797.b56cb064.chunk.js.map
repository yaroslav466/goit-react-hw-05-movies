{"version":3,"file":"static/js/797.b56cb064.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.jsx","js/api.js","pages/MoviesPage.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies, title }) => {\n    const location = useLocation();\n    \n    return (\n        <div>\n            <h2>{title}</h2>\n            <ul>\n                {movies.map(movie => {\n                    return (\n                        <li key={movie.id}>\n                            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                               <img\n                  src={\n                    movie.poster_path\n                      ? `https://image.tmdb.org/t/p/w300/${movie.poster_path}`\n                      : 'https://upload.wikimedia.org/wikipedia/commons/0/0a/No-image-available.png'\n                  }\n                  alt={movie.title}\n                />\n                                <h3>{movie.title}</h3>\n                                {movie.release_date && (\n                                    <h4>{movie.release_date}</h4>\n                                )}\n                            </Link>\n                        </li>\n                    );\n                })}\n            </ul>\n        </div>\n    );\n\n};\nexport default MoviesList;","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'a4d0f7fc82f17915aa5b6f7008bd0506';\n\nexport async function fetchTrendingMovies() {\n  const resp = await axios.get(\n    `${BASE_URL}/trending/movie/day?language=en-US&api_key=${API_KEY}`\n  );\n  return resp.data.results;\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const resp = await axios.get(\n    `${BASE_URL}/movie/${movieId}?language=en-US&api_key=${API_KEY}`\n  );\n  return resp.data;\n}\n\nexport async function fetchMovieCast(movieId) {\n  const resp = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?language=en-US&api_key=${API_KEY}`\n  );\n  return resp.data.cast;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const resp = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?language=en-US&api_key=${API_KEY}`\n  );\n  return resp.data.results;\n}\n\nexport async function fetchMovieByName(query) {\n  const resp = await axios.get(\n    `${BASE_URL}/search/movie?query=${query}&include_adult=false&language=en-US&page=1&api_key=${API_KEY}`\n  );\n  return resp.data.results;\n}","import Loader from 'components/Loader/Loader';\nimport MovieList from 'components/MovieList/MovieList';\nimport { fetchMovieByName } from 'js/api';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchedMovies, setSearchedMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const queryValue = searchParams.get('query');\n\n  const [searchInputValue, setSearchInputValue] = useState(\n    localStorage.getItem('searchInputValue') || ''\n  );\n\n  useEffect(() => {\n    const fetchMoviesList = async () => {\n      if (!queryValue) {\n        setSearchInputValue('');\n        return;\n      }\n\n      try {\n        setIsLoading(true);\n\n        const resp = await fetchMovieByName(queryValue);\n        setSearchedMovies(resp);\n      } catch (err) {\n        console.log(err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMoviesList();\n  }, [queryValue]);\n\n  const onSearch = evt => {\n    evt.preventDefault();\n    evt.preventDefault();\n    const inputValue = evt.currentTarget.elements.searchInput.value;\n    setSearchParams({ query: inputValue });\n    setSearchInputValue(inputValue);\n    localStorage.setItem('searchInputValue', inputValue);\n  };\n\n  return (\n    <>\n      <div>\n        <form onSubmit={onSearch}>\n          <input\n            type=\"text\"\n            name=\"searchInput\"\n            required\n            placeholder=\"Search movies...\"\n            value={searchInputValue}\n            onChange={evt => setSearchInputValue(evt.target.value)}\n          />\n          <button type=\"submit\">\n            Search\n          </button>\n        </form>\n      </div>\n      {searchedMovies === null && <h2>Try searching</h2>}\n      {searchedMovies !== null && searchedMovies.length === 0 && (\n        <h2>No movies found</h2>\n      )}\n      {isLoading && <Loader />}\n\n      {searchedMovies !== null && searchedMovies.length > 0 && (\n        <MovieList movies={searchedMovies} title={`Search result for \"${queryValue}\":`}\n        />\n      )}\n    </>\n  );\n};\nexport default MoviesPage;"],"names":["_ref","movies","title","location","useLocation","_jsxs","children","_jsx","map","movie","Link","to","concat","id","state","from","src","poster_path","alt","release_date","BASE_URL","API_KEY","fetchTrendingMovies","_fetchTrendingMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","resp","_context","prev","next","axios","sent","abrupt","data","results","stop","fetchMovieDetails","_x","_fetchMovieDetails","_callee2","movieId","_context2","fetchMovieCast","_x2","_fetchMovieCast","_callee3","_context3","cast","fetchMovieReviews","_x3","_fetchMovieReviews","_callee4","_context4","fetchMovieByName","_x4","_fetchMovieByName","_callee5","query","_context5","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","searchedMovies","setSearchedMovies","_useState3","_useState4","isLoading","setIsLoading","queryValue","get","_useState5","localStorage","getItem","_useState6","searchInputValue","setSearchInputValue","useEffect","fetchMoviesList","t0","console","log","finish","_Fragment","onSubmit","evt","preventDefault","inputValue","currentTarget","elements","searchInput","value","setItem","type","name","required","placeholder","onChange","target","length","Loader","MovieList"],"sourceRoot":""}