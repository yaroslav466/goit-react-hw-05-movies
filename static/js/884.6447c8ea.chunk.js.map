{"version":3,"file":"static/js/884.6447c8ea.chunk.js","mappings":"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","sources":["js/api.js","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'a4d0f7fc82f17915aa5b6f7008bd0506';\n\nexport async function fetchTrendingMovies() {\n  const resp = await axios.get(\n    `${BASE_URL}/trending/movie/day?language=en-US&api_key=${API_KEY}`\n  );\n  return resp.data.results;\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const resp = await axios.get(\n    `${BASE_URL}/movie/${movieId}?language=en-US&api_key=${API_KEY}`\n  );\n  return resp.data;\n}\n\nexport async function fetchMovieCast(movieId) {\n  const resp = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?language=en-US&api_key=${API_KEY}`\n  );\n  return resp.data.cast;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const resp = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?language=en-US&api_key=${API_KEY}`\n  );\n  return resp.data.results;\n}\n\nexport async function fetchMovieByName(query) {\n  const resp = await axios.get(\n    `${BASE_URL}/search/movie?query=${query}&include_adult=false&language=en-US&page=1&api_key=${API_KEY}`\n  );\n  return resp.data.results;\n}","import Loader from 'components/Loader/Loader';\nimport { fetchMovieDetails } from 'js/api';\nimport { Suspense, lazy, useEffect, useRef, useState } from 'react';\nimport {Link, NavLink, Route, Routes, useLocation, useParams} from 'react-router-dom';\n\nconst Cast = lazy(() => import('components/Cast/Cast'));\nconst Reviews = lazy(() => import('components/Reviews/Reviews'));\n\nconst MoviesDetails = () => {\n    const { movieId } = useParams();\n    const location = useLocation();\n    const backLinkRef = useRef(location.state?.from ?? '/');\n\n    const [movieDetails, setMovieDetails] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        const fetchDetailsSelectMovies = async () => {\n            setIsLoading(true);\n            try {\n                const resp = await fetchMovieDetails(movieId);\n                setMovieDetails(resp);\n            } catch (err) {\n                console.log(err);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        fetchDetailsSelectMovies();\n    }, [movieId]);\n    \n    return (\n        <>\n            <div>\n                <Link to={backLinkRef.current}>\n                    Go back\n                </Link>\n                {isLoading && <Loader />}\n                {movieDetails && (\n                    <>\n                        <div>\n                            <img\n                                src={\n                                    movieDetails.poster_path\n                                        ? `https://image.tmdb.org/t/p/w400/${movieDetails.poster_path}`\n                                        : `https://upload.wikimedia.org/wikipedia/commons/0/0a/No-image-available.png`\n                                }\n                                alt={movieDetails.title}\n                            />\n                            <ul>\n                                <li>\n                                    <h2>{movieDetails.title}</h2>\n                                    <p>\n                                        User Score: {movieDetails.vote_average}\n                                    </p>\n                                </li>\n                                <li>\n                                    <h3>Overview</h3>\n                                    <p>{movieDetails.overview}</p>\n                                </li>\n                                <li >\n                                    <h3>Genres</h3>\n                                    <p>\n                                        {movieDetails.genres\n                                            ?.map(genre => {\n                                                return genre.name;\n                                            })\n                                            .join(', ')}\n                                    </p>\n                                </li>\n                            </ul>\n                        </div>\n                        <div>\n                            <h4>\n                                Additional information\n                            </h4>\n                            <ul>\n                                <li>\n                                    <NavLink to={`cast`}>\n                                        Cast\n                                    </NavLink>\n                                </li>\n                                <li>\n                                    <NavLink to={`reviews`}>\n                                        Reviews\n                                    </NavLink>\n                                </li>\n                            </ul>\n                            <Suspense fallback={<Loader />}>\n                                <Routes>\n                                    <Route path=\"cast\" element={<Cast />} />\n                                    <Route path=\"reviews\" element={<Reviews />} />\n                                </Routes>\n                            </Suspense>\n                        </div>\n                    </>\n                )}\n            </div>\n        </>\n    );\n};\nexport default MoviesDetails;\n"],"names":["BASE_URL","API_KEY","fetchTrendingMovies","_fetchTrendingMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","resp","_context","prev","next","axios","concat","sent","abrupt","data","results","stop","fetchMovieDetails","_x","_fetchMovieDetails","_callee2","movieId","_context2","fetchMovieCast","_x2","_fetchMovieCast","_callee3","_context3","cast","fetchMovieReviews","_x3","_fetchMovieReviews","_callee4","_context4","fetchMovieByName","_x4","_fetchMovieByName","_callee5","query","_context5","Cast","lazy","Reviews","_location$state$from","_location$state","_movieDetails$genres","useParams","location","useLocation","backLinkRef","useRef","state","from","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","_useState3","_useState4","isLoading","setIsLoading","useEffect","fetchDetailsSelectMovies","_ref","t0","console","log","finish","_jsx","_Fragment","children","_jsxs","Link","to","current","Loader","src","poster_path","alt","title","vote_average","overview","genres","map","genre","name","join","NavLink","Suspense","fallback","Routes","Route","path","element"],"sourceRoot":""}