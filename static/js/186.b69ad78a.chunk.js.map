{"version":3,"file":"static/js/186.b69ad78a.chunk.js","mappings":"mPAoDA,UA/CgB,WAAO,IAADA,EAAAC,EAClBC,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GACtBG,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,QAA2B,QAArBjB,EAAe,QAAfC,EAACa,EAASI,aAAK,IAAAjB,OAAA,EAAdA,EAAgBkB,YAAI,IAAAnB,EAAAA,EAAA,WAAAoB,OAAeR,IAmB9D,OAjBAS,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAuB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACT,OAAnBnB,GAAa,GAAMiB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEIC,EAAAA,EAAAA,IAAkBnB,GAAS,KAAD,EAAvCe,EAAIC,EAAAI,KAEVzB,GAAU0B,EAAAA,EAAAA,GAAKN,IAAOC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAEtBO,QAAQC,IAAGR,EAAAM,IAAM,QAEG,OAFHN,EAAAC,KAAA,GAEjBlB,GAAa,GAAOiB,EAAAS,OAAA,6BAAAT,EAAAU,OAAA,GAAAZ,EAAA,wBAE3B,kBAX4B,OAAAH,EAAAgB,MAAA,KAAAC,UAAA,KAa7BlB,GACJ,GAAG,CAACV,KAGA6B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI9B,EAAY+B,QAAQJ,SAAC,WAElCjC,IAAakC,EAAAA,EAAAA,KAACI,EAAAA,EAAM,KACnBtC,GAAgC,IAAnBJ,EAAQ2C,SAAgBL,EAAAA,EAAAA,KAAA,MAAAD,SAAI,0BAC1CrC,EAAQ2C,OAAS,IACdL,EAAAA,EAAAA,KAAA,MAAAD,SACKrC,EAAQ4C,KAAI,SAAAC,GACT,OACIV,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAI,KAAGQ,EAAOC,OAAO,QACrBR,EAAAA,EAAAA,KAAA,KAAAD,SAAIQ,EAAOE,YAFNF,EAAOG,GAKxB,QAKpB,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import Loader from 'components/Loader/Loader';\nimport { fetchMovieReviews } from 'js/api';\nimport { useEffect, useRef, useState } from 'react';\nimport { Link, useLocation, useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const { movieId } = useParams();\n    \n    const location = useLocation();\n    const backLinkRef = useRef(location.state?.from ?? `/movies/${movieId}`);\n    \n    useEffect(() => {\n        const fetchSelectMovieReviews = async () => {\n            setIsLoading(true);\n            try {\n                const resp = await fetchMovieReviews(movieId);\n\n                setReviews([...resp]);\n            } catch (err) {\n                console.log(err);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        fetchSelectMovieReviews();\n    }, [movieId]);\n    \n    return (\n        <>\n            <h2>\n                <Link to={backLinkRef.current}>Hide</Link>\n            </h2>\n            {isLoading && <Loader />}\n            {!isLoading && reviews.length === 0 && <h3>There are no reviews.</h3>}\n            {reviews.length > 0 && (\n                <ul>\n                    {reviews.map(review => {\n                        return (\n                            <li key={review.id}>\n                                <h3>@ {review.author}:</h3>\n                                <p>{review.content}</p>\n                            </li>\n                        );\n                    })}\n                </ul>\n            )}\n        </>\n    );\n};\nexport default Reviews;"],"names":["_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","isLoading","setIsLoading","movieId","useParams","location","useLocation","backLinkRef","useRef","state","from","concat","useEffect","fetchSelectMovieReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","resp","_context","prev","next","fetchMovieReviews","sent","_toConsumableArray","t0","console","log","finish","stop","apply","arguments","_jsxs","_Fragment","children","_jsx","Link","to","current","Loader","length","map","review","author","content","id"],"sourceRoot":""}